[tool.poetry]
name = "{{cookiecutter.project_repo_name}}"
version = "{{cookiecutter.project_version}}"
description = "{{cookiecutter.project_short_description}}"
authors = ["{{cookiecutter.author_name}}"]

[tool.poetry.dependencies]
python = "{{cookiecutter.project_python_version}}"
Django = "^4.2"
dj-database-url = "^2.1.0"
python-decouple = "^3.8"
whitenoise = "^6.5.0"
mysqlclient = "^2.2.0"

[tool.poetry.dev-dependencies]
coverage = "^7.3.0"
isort = "^5.12.0"
black = "^23.7.0"
sphinx = "^7.2.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
line_length=120
indent='    '
multi_line_output=3
sections=["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
from_first=true
include_trailing_comma=true
force_alphabetical_sort_within_sections=true
profile = "black"

[tool.flake8]
max-line-length = 120
hang-closing = false
exclude = [
    "__pycache__",
    ".venv",
    "tests",
    "docs/source/conf.py"
]

[tool.mypy]
python_version = 3.11
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = '/*/migrations/*'
strict = true

[tool.coverage.run]
branch=true
include=["*/*.py"]
omit=[
    "*/.pyenv/*",
    "*/.venv/*",
    "*/env/*",
    "*/tests/*.py",
    "*/docs/*.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if self.debug",
    "if __name__ == '__main__':"
]

[tool.coverage.html]
directory="coverage"
